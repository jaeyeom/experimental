---
- import_playbook: setup-user-go-bin-directory.yml
- import_playbook: protoc.yml

- name: Ensure protoc-gen-go is present
  hosts: all
  tasks:
    - name: Include guard for protoc-gen-go playbook
      block:
        - name: Stop early if the protoc-gen-go playbook is already included
          meta: end_play
          when: protoc_gen_go_playbook_imported is defined
        - name: Ensure the protoc-gen-go playbook is not included
          set_fact:
            protoc_gen_go_playbook_imported: true
          when: protoc_gen_go_playbook_imported is not defined

    - name: Check if protoc-gen-go is installed
      shell: go version -m $(command -v protoc-gen-go) | grep '^\s*mod\s'
      register: protoc_gen_go_installed
      ignore_errors: yes
      changed_when: False

    - name: Extract protoc-gen-go version
      block:
        - name: Set protoc-gen-go facts
          set_fact:
            protoc_gen_go_module_path: "{{ protoc_gen_go_installed.stdout.split()[1] }}"
            protoc_gen_go_module_version: "{{ protoc_gen_go_installed.stdout.split()[2] }}"
        - name: Determine the latest protoc-gen-go version
          command: go list -m -f "{{ '{{' }}.Version {{ '}}' }}" "{{ protoc_gen_go_module_path }}@latest"
          register: protoc_gen_go_latest
          ignore_errors: yes
          changed_when: False

        - name: Debug module path and version
          debug:
            msg: "{{ protoc_gen_go_module_path }} {{ protoc_gen_go_module_version }} => {{ protoc_gen_go_latest.stdout }}"
      rescue:
        - name: Clear protoc-gen-go facts
          set_fact:
            protoc_gen_go_module_path: ""
            protoc_gen_go_module_version: ""

    - name: Upgrade protoc-gen-go
      command: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      when: protoc_gen_go_module_version is not defined or protoc_gen_go_module_version == "" or protoc_gen_go_module_version != protoc_gen_go_latest.stdout
