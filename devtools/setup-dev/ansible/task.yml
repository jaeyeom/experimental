---
- import_playbook: setup-user-go-bin-directory.yml

- name: Ensure task is present
  hosts: all
  tasks:
    - name: Include guard for task playbook
      block:
        - name: Stop early if the task playbook is already included
          meta: end_play
          when: task_playbook_imported is defined
        - name: Ensure the task playbook is not included
          set_fact:
            task_playbook_imported: true
          when: task_playbook_imported is not defined

    - name: Check if task is installed
      shell: go version -m $(command -v task) | grep '^\s*mod\s'
      register: task_installed
      ignore_errors: yes
      changed_when: False

    - name: Extract task version
      block:
        - name: Set task facts
          set_fact:
            task_module_path: "{{ task_installed.stdout.split()[1] }}"
            task_module_version: "{{ task_installed.stdout.split()[2] }}"
        - name: Determine the latest task version
          command: go list -m -f "{{ '{{' }}.Version {{ '}}' }}" "{{ task_module_path }}@latest"
          register: task_latest
          ignore_errors: yes
          changed_when: False

        - name: Debug module path and version
          debug:
            msg: "{{ task_module_path }} {{ task_module_version }} => {{ task_latest.stdout }}"
      rescue:
        - name: Clear task facts
          set_fact:
            task_module_path: ""
            task_module_version: ""

    - name: Upgrade task
      command: go install github.com/go-task/task/v3/cmd/task@latest
      when: task_module_version is not defined or task_module_version == "" or task_module_version != task_latest.stdout
