---
- import_playbook: setup-git.yml
- import_playbook: ssh.yml
- import_playbook: sshpass.yml
- import_playbook: keychain.yml
  when: ansible_env.TERMUX_VERSION is not defined

- name: Ensure SSH keys are generated and SSH agent is configured
  hosts: all
  tasks:
    - name: Include guard for setup-ssh-key playbook
      block:
        - name: Stop early if the setup-ssh-key playbook is already included
          meta: end_play
          when: setup_ssh_key_playbook_imported is defined
        - name: Ensure the setup-ssh-key playbook is not included
          set_fact:
            setup_ssh_key_playbook_imported: true
          when: setup_ssh_key_playbook_imported is not defined

    - name: Ensure the user SSH directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.ssh"
        state: directory
        mode: '0700'

    - name: Stat the key file
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.ssh/id_ed25519"
      register: ssh_key_file

    - name: Generate SSH Key
      community.crypto.openssh_keypair:
        path: "{{ ansible_env.HOME }}/.ssh/id_ed25519"
        type: ed25519
        passphrase: "{{ ansible_env.SSHPASS }}"
        comment: "{{ git_user_email }}"
      when: not ssh_key_file.stat.exists

    - name: Add SSH key to the SSH authentication agent if not already added
      block:
        - name: Check if SSH key is already added to the agent
          command: ssh-add -l
          register: ssh_agent_keys
          failed_when: false
          changed_when: false

        - name: Add SSH key to the SSH authentication agent
          command: sshpass -P passphrase -e ssh-add {{ ansible_env.HOME }}/.ssh/id_ed25519
          when: ssh_agent_keys.rc != 0
      when: ansible_env.SSH_AUTH_SOCK is defined

    - name: Ensure sourcing keychain on non-Termux systems
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        append_newline: true
        prepend_newline: true
        create: true
        marker: "# {mark} running keychain"
        block: |
          eval $(keychain --eval --agents ssh id_ed25519)
      when: ansible_env.TERMUX_VERSION is not defined

    - name: Ensure SSH agent is enabled on Termux
      block:
        - name: Ensure sv-enable is present on Termux
          block:
            - name: Check if sv-enable is installed
              shell: command -v sv-enable
              changed_when: False
          rescue:
            - name: Install sv-enable on Termux
              command: pkg install -y termux-services
        - name: Ensure sourcing SSH agent on Termux
          ansible.builtin.blockinfile:
            path: "{{ ansible_env.HOME }}/.bashrc"
            append_newline: true
            prepend_newline: true
            create: true
            marker: "# {mark} sourcing Termux ssh agent"
            block: |
              . "${TERMUX__PREFIX:-"${PREFIX}"}"/libexec/source-ssh-agent.sh
        - name: Stat the ssh-agent down file
          ansible.builtin.stat:
            path: "{{ ansible_env.PREFIX }}/var/service/ssh-agent/down"
          register: ssh_agent_down_file
        - name: Ensure ssh-agent service is enabled
          command: sv-enable ssh-agent
          when: ssh_agent_down_file.stat.exists
      when: ansible_env.TERMUX_VERSION is defined

    - name: Debug output of the SSH agent and key status (restart shell if fails)
      debug:
        msg:
          - "SSH_AUTH_SOCK: {{ ansible_env.SSH_AUTH_SOCK }}"
          - "SSH key: {{ ssh_key_file.stat.path }}"
