---
- import_playbook: setup-user-go-bin-directory.yml

- name: Ensure godoctor is present
  hosts: all
  tasks:
    - name: Check if godoctor is installed
      shell: go version -m $(command -v godoctor) | grep '^\s*mod\s'
      register: godoctor_installed
      ignore_errors: yes
      changed_when: False

    - name: Extract godoctor version
      block:
        - name: Set godoctor facts
          set_fact:
            godoctor_module_path: "{{ godoctor_installed.stdout.split()[1] }}"
            godoctor_module_version: "{{ godoctor_installed.stdout.split()[2] }}"
        - name: Determine the latest godoctor version
          command: go list -m -f "{{ '{{' }}.Version {{ '}}' }}" "{{ godoctor_module_path }}@latest"
          register: godoctor_latest
          ignore_errors: yes
          changed_when: False

        - name: Debug module path and version
          debug:
            msg: "{{ godoctor_module_path }} {{ godoctor_module_version }} => {{ godoctor_latest.stdout }}"
      rescue:
        - name: Clear godoctor facts
          set_fact:
            godoctor_module_path: ""
            godoctor_module_version: ""

    - name: Upgrade godoctor
      command: go install github.com/godoctor/godoctor@latest
      when: godoctor_module_version is not defined or godoctor_module_version == "" or godoctor_module_version != godoctor_latest.stdout
