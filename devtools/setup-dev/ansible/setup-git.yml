---
- import_playbook: git.yml

- name: Ensure git is properly set up
  hosts: all
  tasks:
    - name: Determine the user name
      shell: git config --global user.name
      register: get_git_user_name
      ignore_errors: true
      changed_when: False

    - name: Determine the user email
      shell: git config --global user.email
      register: get_git_user_email
      ignore_errors: true
      changed_when: False

    - name: Asserts that user name and email are available
      ansible.builtin.assert:
        that: (get_git_user_name.stdout or ansible_env.GIT_AUTHOR_NAME) and
              (get_git_user_email.stdout or ansible_env.GIT_AUTHOR_EMAIL)
        fail_msg: "Please set GIT_AUTHOR_NAME and/or GIT_AUTHOR_EMAIL"

    - name: Set global user name
      shell: git config --global user.name "{{ ansible_env.GIT_AUTHOR_NAME }}"
      when: get_git_user_name.stdout == ""

    - name: Set global user email
      shell: git config --global user.email "{{ ansible_env.GIT_AUTHOR_EMAIL }}"
      when: get_git_user_email.stdout == ""

    - name: Ensure git user name is set
      ansible.builtin.set_fact:
        git_user_name: "{{ get_git_user_name.stdout | default(ansible_env.GIT_AUTHOR_NAME) }}"

    - name: Ensure git user email is set
      ansible.builtin.set_fact:
        git_user_email: "{{ get_git_user_email.stdout | default(ansible_env.GIT_AUTHOR_EMAIL) }}"

    - name: Debug name
      ansible.builtin.debug:
        msg: "The git user name is {{ git_user_name }}"

    - name: Debug email
      ansible.builtin.debug:
        msg: "The git user email is {{ git_user_email }}"
