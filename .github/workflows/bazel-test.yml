name: Bazel Tests

permissions:
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Run Bazel Tests with Coverage
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Bazel
      uses: bazelbuild/setup-bazelisk@v3

    - name: Mount Bazel cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/bazel
        key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
        restore-keys: |
          ${{ runner.os }}-bazel-

    - name: Install lcov
      run: sudo apt-get update && sudo apt-get install -y lcov

    - name: Run tests with coverage
      run: |
        mkdir -p coverage
        bazel coverage --combined_report=lcov //...
        OUTPUT_PATH=$(bazel info output_path)
        COVERAGE_FILE="$OUTPUT_PATH/_coverage/_coverage_report.dat"
        if [ -f "$COVERAGE_FILE" ]; then
          lcov --ignore-errors unused --remove "$COVERAGE_FILE" \
            '*_test.go' \
            '*/vendor/*' \
            '*/external/*' \
            '*/testdata/*' \
            -o coverage/lcov.info
          echo "Coverage report generated successfully"
        else
          echo "Warning: Coverage file not found, running tests without coverage"
          bazel test //...:all
        fi

    - name: Generate HTML coverage report
      run: |
        genhtml --branch-coverage --output-directory coverage/html coverage/lcov.info
        echo "Coverage report available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" > coverage/html/README.txt

    - name: Setup Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Upload coverage artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'coverage/html'

    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
